/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as FrontendModePrivateImport } from './routes/frontend-mode/private'
import { Route as FrontendModeGuestImport } from './routes/frontend-mode/guest'
import { Route as ClientConnectPrivatePrivateSessionImport } from './routes/client-connect/private/$privateSession'
import { Route as ClientConnectGuestSessionImport } from './routes/client-connect/guest/$session'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const FrontendModePrivateRoute = FrontendModePrivateImport.update({
  id: '/frontend-mode/private',
  path: '/frontend-mode/private',
  getParentRoute: () => rootRoute,
} as any)

const FrontendModeGuestRoute = FrontendModeGuestImport.update({
  id: '/frontend-mode/guest',
  path: '/frontend-mode/guest',
  getParentRoute: () => rootRoute,
} as any)

const ClientConnectPrivatePrivateSessionRoute =
  ClientConnectPrivatePrivateSessionImport.update({
    id: '/client-connect/private/$privateSession',
    path: '/client-connect/private/$privateSession',
    getParentRoute: () => rootRoute,
  } as any)

const ClientConnectGuestSessionRoute = ClientConnectGuestSessionImport.update({
  id: '/client-connect/guest/$session',
  path: '/client-connect/guest/$session',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/frontend-mode/guest': {
      id: '/frontend-mode/guest'
      path: '/frontend-mode/guest'
      fullPath: '/frontend-mode/guest'
      preLoaderRoute: typeof FrontendModeGuestImport
      parentRoute: typeof rootRoute
    }
    '/frontend-mode/private': {
      id: '/frontend-mode/private'
      path: '/frontend-mode/private'
      fullPath: '/frontend-mode/private'
      preLoaderRoute: typeof FrontendModePrivateImport
      parentRoute: typeof rootRoute
    }
    '/client-connect/guest/$session': {
      id: '/client-connect/guest/$session'
      path: '/client-connect/guest/$session'
      fullPath: '/client-connect/guest/$session'
      preLoaderRoute: typeof ClientConnectGuestSessionImport
      parentRoute: typeof rootRoute
    }
    '/client-connect/private/$privateSession': {
      id: '/client-connect/private/$privateSession'
      path: '/client-connect/private/$privateSession'
      fullPath: '/client-connect/private/$privateSession'
      preLoaderRoute: typeof ClientConnectPrivatePrivateSessionImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/frontend-mode/guest': typeof FrontendModeGuestRoute
  '/frontend-mode/private': typeof FrontendModePrivateRoute
  '/client-connect/guest/$session': typeof ClientConnectGuestSessionRoute
  '/client-connect/private/$privateSession': typeof ClientConnectPrivatePrivateSessionRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/frontend-mode/guest': typeof FrontendModeGuestRoute
  '/frontend-mode/private': typeof FrontendModePrivateRoute
  '/client-connect/guest/$session': typeof ClientConnectGuestSessionRoute
  '/client-connect/private/$privateSession': typeof ClientConnectPrivatePrivateSessionRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/frontend-mode/guest': typeof FrontendModeGuestRoute
  '/frontend-mode/private': typeof FrontendModePrivateRoute
  '/client-connect/guest/$session': typeof ClientConnectGuestSessionRoute
  '/client-connect/private/$privateSession': typeof ClientConnectPrivatePrivateSessionRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/frontend-mode/guest'
    | '/frontend-mode/private'
    | '/client-connect/guest/$session'
    | '/client-connect/private/$privateSession'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/frontend-mode/guest'
    | '/frontend-mode/private'
    | '/client-connect/guest/$session'
    | '/client-connect/private/$privateSession'
  id:
    | '__root__'
    | '/'
    | '/frontend-mode/guest'
    | '/frontend-mode/private'
    | '/client-connect/guest/$session'
    | '/client-connect/private/$privateSession'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FrontendModeGuestRoute: typeof FrontendModeGuestRoute
  FrontendModePrivateRoute: typeof FrontendModePrivateRoute
  ClientConnectGuestSessionRoute: typeof ClientConnectGuestSessionRoute
  ClientConnectPrivatePrivateSessionRoute: typeof ClientConnectPrivatePrivateSessionRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FrontendModeGuestRoute: FrontendModeGuestRoute,
  FrontendModePrivateRoute: FrontendModePrivateRoute,
  ClientConnectGuestSessionRoute: ClientConnectGuestSessionRoute,
  ClientConnectPrivatePrivateSessionRoute:
    ClientConnectPrivatePrivateSessionRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/frontend-mode/guest",
        "/frontend-mode/private",
        "/client-connect/guest/$session",
        "/client-connect/private/$privateSession"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/frontend-mode/guest": {
      "filePath": "frontend-mode/guest.tsx"
    },
    "/frontend-mode/private": {
      "filePath": "frontend-mode/private.tsx"
    },
    "/client-connect/guest/$session": {
      "filePath": "client-connect/guest/$session.tsx"
    },
    "/client-connect/private/$privateSession": {
      "filePath": "client-connect/private/$privateSession.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
